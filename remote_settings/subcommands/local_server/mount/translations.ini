#
# Configuration for a local instance:
#
# - Autograph at http://autograph:8000
# - Multi-signoff enabled
# - Authentication via accounts
#
# This file was copied from the following file:
# https://github.com/mozilla/translations/blob/main/utils/local_remote_settings/mount/translations.ini
#
[app:main]
use = egg:kinto

kinto.project_name = Remote Settings LOCAL

kinto.includes = kinto.plugins.admin
                 kinto.plugins.accounts
                 kinto.plugins.history
                 kinto.plugins.flush
                 kinto_attachment
                 kinto_remote_settings

kinto.storage_backend = kinto.core.storage.memory
kinto.storage_url =
kinto.cache_backend = kinto.core.cache.memory
kinto.cache_url =
kinto.permission_backend = kinto.core.permission.memory
kinto.permission_url =

kinto.experimental_permissions_endpoint = true
kinto.experimental_collection_schema_validation = true

kinto.statsd_url = udp://localhost:8125

# Always return CORS headers
cornice.always_cors = true

multiauth.policies = account
multiauth.policy.account.use = kinto.plugins.accounts.authentication.AccountsAuthenticationPolicy
kinto.userid_hmac_secret = 284461170acd78f0be0827ef514754937474d7c922191e4f78be5c1d232b38c4

## Accounts
kinto.account_create_principals = system.Everyone
kinto.account_write_principals = system.Everyone
kinto.account_read_principals = system.Everyone

## Buckets
kinto.bucket_create_principals = system.Everyone
kinto.bucket_write_principals = system.Everyone
kinto.bucket_read_principals = system.Everyone

## Collections
kinto.collection_create_principals = system.Everyone
kinto.collection_write_principals = system.Everyone
kinto.collection_read_principals = system.Everyone

## Groups
kinto.group_create_principals = system.Everyone
kinto.group_write_principals = system.Everyone
kinto.group_read_principals = system.Everyone

## Records
kinto.record_create_principals = system.Everyone
kinto.record_write_principals = system.Everyone
kinto.record_read_principals = system.Everyone

#
# Sentry
#
kinto.sentry_dsn = https://userid@o1.ingest.sentry.io/1
kinto.sentry_env = prod

#
# Kinto history
#
kinto.history.exclude_resources = /buckets/main-preview
                                  /buckets/main

#
# Kinto attachment
#

kinto.attachment.base_path = /tmp/attachments
kinto.attachment.base_url =
# See uwsgi static-map setting
kinto.attachment.extra.base_url = http://localhost:8888/attachments
kinto.attachment.folder = {bucket_id}/{collection_id}
kinto.attachment.extensions = any


#
# Kinto Remote Settings
#

kinto.changes.resources =
    /buckets/main
    /buckets/main-preview

kinto.signer.resources =
    /buckets/main-workspace           -> /buckets/main-preview           -> /buckets/main
kinto.signer.to_review_enabled = true
kinto.signer.auto_create_resources = true

kinto.signer.main-workspace.translations-wasm.to_review_enabled = false
kinto.signer.main-workspace.translations-models.to_review_enabled = false
kinto.signer.main.translations-wasm.to_review_enabled = false
kinto.signer.main.translations-models.to_review_enabled = false

kinto.signer.signer_backend = kinto_remote_settings.signer.backends.local_ecdsa
kinto.signer.ecdsa.private_key = /app/ecdsa.private.pem
kinto.signer.ecdsa.public_key = /app/ecdsa.public.pem

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8888


[uwsgi]
wsgi-file = app.wsgi
master = true
module = kinto
static-map = /attachments=/tmp/attachments
plugin = dogstatsd
enable-threads = true
py-call-uwsgi-fork-hooks = true

#
# Logging
#

[loggers]
keys = root, kinto

[handlers]
keys = console

[formatters]
keys = color, json

[logger_root]
level = INFO
handlers = console

[logger_kinto]
level = DEBUG
handlers = console
qualname = kinto

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = color

[formatter_json]
class = kinto.core.JsonLogFormatter

[formatter_color]
class = logging_color_formatter.ColorFormatter
